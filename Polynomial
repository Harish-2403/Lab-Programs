#include <stdio.h>
#include <stdlib.h>

struct Node {
    int coeff;
    int pow;
    struct Node* next;
};

struct Node* create_node(int coeff, int pow) {
    struct Node* Poly = (struct Node*)malloc(sizeof(struct Node));
    if (Poly == NULL) {
        fprintf(stderr, "Memory allocation failed\n");
        exit(1);
    }
    Poly->coeff = coeff;
    Poly->pow = pow;
    Poly->next = NULL;
    return Poly;
}

void insert(struct Node** head, int coeff, int pow) {
    struct Node* Poly = create_node(coeff, pow);
    if (*head == NULL) {
        *head = Poly;
        return;
    }
    struct Node* temp = *head;
    while (temp->next != NULL) {
        temp = temp->next;
    }
    temp->next = Poly;
}

void print_poly(struct Node* head) {
    if (head == NULL) {
        printf("0");
        return;
    }
    while (head != NULL) {
        printf("%dx^%d", head->coeff, head->pow);
        head = head->next;
        if (head != NULL)
            printf(" + ");
    }
}

struct Node* add_poly(struct Node* p1, struct Node* p2) {
    struct Node* result = NULL;
    while (p1 != NULL && p2 != NULL) {
        if (p1->pow > p2->pow) {
            insert(&result, p1->coeff, p1->pow);
            p1 = p1->next;
        } else if (p1->pow < p2->pow) {
            insert(&result, p2->coeff, p2->pow);
            p2 = p2->next;
        } else {
            insert(&result, p1->coeff + p2->coeff, p1->pow);
            p1 = p1->next;
            p2 = p2->next;
        }
    }
    while (p1 != NULL) {
        insert(&result, p1->coeff, p1->pow);
        p1 = p1->next;
    }
    while (p2 != NULL) {
        insert(&result, p2->coeff, p2->pow);
        p2 = p2->next;
    }
    return result;
}

void free_poly(struct Node* head) {
    while (head != NULL) {
        struct Node* temp = head;
        head = head->next;
        free(temp);
    }
}

int main() {
    struct Node* P1 = NULL, * P2 = NULL, * P3 = NULL;

    // Get the number of terms in the first polynomial
    int nterms1;
    printf("Enter the number of terms in the first polynomial: ");
    scanf("%d", &nterms1);

    // Get the terms of the first polynomial
    printf("Enter the terms of the first polynomial in decreasing order of power:\n");
    for (int i = 0; i < nterms1; i++) {
        int coeff, pow;
        printf("Enter the coefficient and power of term %d: ", i + 1);
        scanf("%d %d", &coeff, &pow);
        insert(&P1, coeff, pow);
    }

    // Get the number of terms in the second polynomial
    int nterms2;
    printf("Enter the number of terms in the second polynomial: ");
    scanf("%d", &nterms2);

    // Get the terms of the second polynomial
    printf("Enter the terms of the second polynomial in decreasing order of power:\n");
    for (int i = 0; i < nterms2; i++) {
        int coeff, pow;
        printf("Enter the coefficient and power of term %d: ", i + 1);
        scanf("%d %d", &coeff, &pow);
        insert(&P2, coeff, pow);
    }

    // Add the two polynomials
    P3 = add_poly(P1, P2);

    // Print the result
    printf("Polynomial 1: ");
    print_poly(P1);
    printf("\nPolynomial 2: ");
    print_poly(P2);
    printf("\nSum: ");
    print_poly(P3);

    // Free memory
    free_poly(P1);
    free_poly(P2);
    free_poly(P3);

    return 0;
}
